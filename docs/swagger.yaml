openapi: 3.0.2
info:
    title: shop-api
    version: 1.0.0
    description: '### This is a Swagger UI for my Shop API'
paths:
    /items:
        get:
            tags:
                - items
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of items:
                                    value:
                                        - Samsung Galaxy S23
                                        - Microwave oven Polaris
                    description: ' Returns a list of items'
            summary: Get a list of all items
            description: Returns a list of all items in API
        post:
            requestBody:
                description: A new game to be created
                required: true
            tags:
                - new-item
            responses:
                '201':
                    content:
                        new-item: {}
                    description: Successfully created
                '400':
                    content:
                        error:
                            examples:
                                Bad Request:
                                    value: Something is missing
                    description: 'One or all params are missing. '
            summary: New item
            description: ''
    '/items/{id}':
        get:
            tags:
                - details
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Full details of a given game:
                                    value: '{id:3, name: "Nvidia RTX 3070", price: 1100.99}'
                    description: Returns fill details of a given id item
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Game /w+ was not found:
                                    value:
                                        error: Item was not found
                    description: Item was not found in items array
            operationId: id
            summary: Get full details of a given item
            description: Returns full details of a given item
        delete:
            requestBody:
                content:
                    delete-item: {}
                required: false
            tags:
                - delete
            parameters:
                -
                    name: id
                    in: path
                    required: true
            responses:
                '204':
                    description: Empty
                '404':
                    description: The item you're looking for is not here anymore
            summary: Delete item
            description: Will erase
        parameters:
            -
                name: id
                in: path
                required: true
    /users: {}
    '/users/{id}': {}
    /reviews:
        get:
            tags:
                - reviews
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of reviews:
                                    value:
                                        - Very good
                                        - Nice
                    description: Returns a list of reviews
            summary: Get a list of all reviews
            description: Returns a list of all reviews in API
    '/reviews/{id}':
        get:
            tags:
                - details
            operationId: id
            summary: Get a full details of a given review
            description: Returns full details of a given review
        parameters:
            -
                name: id
                in: path
                required: true
components:
    schemas:
        error:
            title: Root Type for error
            description: ''
            type: object
            properties:
                error:
                    type: string
            example:
                error: Error message.
        delete-item:
            title: Root Type for delete-item
            description: Will remove item
            required:
                - id
            type: object
            properties:
                id:
                    format: int32
                    type: integer
            example:
                id: 1
        new-item:
            title: Root Type for new-game
            description: Try it out!
            required:
                - price
                - name
            type: object
            properties:
                name:
                    type: string
                price:
                    format: float
                    type: number
            example:
                name: Apple Watch Series 7
                price: 499.99